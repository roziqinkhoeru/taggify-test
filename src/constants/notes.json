{
	"status": "success",
	"message": "Notes successfully retrieved",
	"data": [
		{
			"id": 1,
			"entityType": "notes",
			"title": "Understanding JavaScript Closures",
			"text": "Closures are a powerful feature in JavaScript that allow inner functions to access variables from an outer function, even after the outer function has executed. This behavior enables developers to create private variables, memoization functions, and maintain state in asynchronous operations. Mastering closures can significantly improve the way you write JavaScript code, especially in functional programming paradigms.",
			"tags": [
				{ "id": 101, "name": "JavaScript", "color": "#f7df1e", "createdAt": "2024-03-15T10:30:00Z" },
				{ "id": 102, "name": "Programming", "color": "#3498db", "createdAt": "2024-03-18T14:45:00Z" }
			]
		},
		{
			"id": 2,
			"entityType": "notes",
			"title": "Next.js vs React: Key Differences",
			"text": "Next.js is a framework built on top of React that provides additional features such as server-side rendering (SSR) and static site generation (SSG). These features help improve performance and SEO, making it a popular choice for modern web applications. While React is a library that focuses on building UI components, Next.js extends its capabilities by adding routing, API handling, and automatic optimization.",
			"tags": [
				{ "id": 103, "name": "Next.js", "color": "#000000", "createdAt": "2024-02-28T08:20:00Z" },
				{ "id": 104, "name": "React", "color": "#61dafb", "createdAt": "2024-02-25T09:10:00Z" }
			]
		},
		{
			"id": 3,
			"entityType": "notes",
			"title": "The Importance of UI/UX in Web Development",
			"text": "A good UI/UX design enhances user experience by making applications more intuitive and visually appealing. It involves understanding user behavior, optimizing workflows, and ensuring accessibility for all types of users. Developers and designers must work together to create seamless interfaces that not only look good but also function efficiently across different devices and screen sizes.",
			"tags": [
				{ "id": 105, "name": "UI/UX", "color": "#ff5733", "createdAt": "2024-01-12T11:05:00Z" },
				{ "id": 106, "name": "Design", "color": "#8e44ad", "createdAt": "2024-01-15T12:30:00Z" }
			]
		},
		{
			"id": 4,
			"entityType": "notes",
			"title": "Building a REST API with Laravel",
			"text": "Laravel provides an elegant way to build REST APIs by leveraging its built-in features such as Eloquent ORM, routing, and middleware. Developers can define API routes, handle authentication with Sanctum or Passport, and manage database queries effortlessly. The framework also offers robust error handling and validation, making it a great choice for backend development.",
			"tags": [
				{ "id": 107, "name": "Laravel", "color": "#ff2d20", "createdAt": "2024-04-05T13:40:00Z" },
				{ "id": 108, "name": "Backend", "color": "#2ecc71", "createdAt": "2024-04-07T16:20:00Z" }
			]
		},
		{
			"id": 5,
			"entityType": "notes",
			"title": "The Basics of Git and Version Control",
			"text": "Git is a distributed version control system that allows developers to track changes in their codebase efficiently. It enables collaboration through branching and merging, ensuring that multiple contributors can work on a project simultaneously. Understanding Git commands like `commit`, `push`, `pull`, and `rebase` is essential for managing software development projects effectively.",
			"tags": [
				{ "id": 109, "name": "Git", "color": "#f1502f", "createdAt": "2024-02-10T07:25:00Z" },
				{ "id": 110, "name": "Version Control", "color": "#16a085", "createdAt": "2024-02-12T09:50:00Z" }
			]
		}
	]
}
